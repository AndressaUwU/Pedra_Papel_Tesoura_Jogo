import cv2
import mediapipe as mp
import random

video = cv2.VideoCapture(0)

hands = mp.solutions.hands
Hands = hands.Hands(max_num_hands=2)  # Permitir detecção de duas mãos
mpDraw = mp.solutions.drawing_utils

def count_fingers(pontos, is_left_hand):
    contador = 0
    dedos = [4, 8, 12, 16, 20]  # Pontos das pontas dos dedos

    # Contar polegar
    if is_left_hand:
        # Para a mão esquerda, o polegar deve estar para cima
        if pontos[4][0] > pontos[3][0]:  # Polegar levantado
            contador += 1
    else:
        # Para a mão direita, o polegar deve estar para baixo
        if pontos[4][0] < pontos[3][0]:  # Polegar levantado
            contador += 1

    # Contar os outros dedos
    for i in range(1, len(dedos)):
        if pontos[dedos[i]][1] < pontos[dedos[i] - 2][1]:  # Se a ponta do dedo está acima da articulação
            contador += 1

    return contador

def determine_winner(choice1, choice2):
    if choice1 == choice2:
        return "Empate!"
    elif (choice1 == "Pedra" and choice2 == "Tesoura") or \
         (choice1 == "Tesoura" and choice2 == "Papel") or \
         (choice1 == "Papel" and choice2 == "Pedra"):
        return "Jogador 1 venceu!"
    else:
        return "Jogador 2 venceu!"

while True:
    success, img = video.read()
    if not success:
        print("Erro ao capturar o vídeo")
        break

    frameRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    results = Hands.process(frameRGB)
    handPoints = results.multi_hand_landmarks
    h, w, _ = img.shape
    choices = [None, None]  # Escolhas dos jogadores
    resultado = ""

    if handPoints:
        for i, points in enumerate(handPoints):
            pontos = []
            mpDraw.draw_landmarks(img, points, hands.HAND_CONNECTIONS)
            for id, cord in enumerate(points.landmark):
                cx, cy = int(cord.x * w), int(cord.y * h)
                pontos.append((cx, cy))

            # Determinar se é a mão esquerda ou direita
            is_left_hand = points.landmark[0].x < 0.5  # Considera como mão esquerda se o ponto base está à esquerda da tela

            # Contar dedos da mão atual
            total_contador = count_fingers(pontos, is_left_hand)

            # Determinar a jogada do jogador
            if total_contador == 0:
                choices[i] = "Pedra"
            elif total_contador == 2:
                choices[i] = "Tesoura"
            elif total_contador == 5:
                choices[i] = "Papel"
            else:
                choices[i] = None

        # Verificar se ambos os jogadores fizeram suas escolhas
        if choices[0] and choices[1]:
            resultado = determine_winner(choices[0], choices[1])

    # Exibir contagem total e resultado
    cv2.rectangle(img, (80, 10), (600, 110), (255, 0, 0), -1)
    cv2.putText(img, f"Jogador 1: {choices[0] if choices[0] else 'Aguardando...'}", 
                (100, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 255, 255), 2)
    cv2.putText(img, f"Jogador 2: {choices[1] if choices[1] else 'Aguardando...'}", 
                (100, 100), cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 255, 255), 2)
    cv2.putText(img, resultado, (100, 150), cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 255, 255), 2)

    cv2.imshow('Imagem', img)
    
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

video.release()
cv2.destroyAllWindows()


